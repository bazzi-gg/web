name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags:
      - "*.*.*"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Secret Setup
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          APP_GTM_ID: ${{ secrets.APP_GTM_ID }}
          APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.APP_FIREBASE_STORAGE_BUCKET }}
          APP_FIREBASE_PROJECT_ID: ${{ secrets.APP_FIREBASE_PROJECT_ID }}
          APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.APP_FIREBASE_MESSAGING_SENDER_ID }}
          APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.APP_FIREBASE_MEASUREMENT_ID }}
          APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.APP_FIREBASE_AUTH_DOMAIN }}
          APP_FIREBASE_APP_ID: ${{ secrets.APP_FIREBASE_APP_ID }}
          APP_FIREBASE_API_KEY: ${{ secrets.APP_FIREBASE_API_KEY }}
        run: |
          echo "APP_FIREBASE_API_KEY=$APP_FIREBASE_API_KEY" >> .env.production
          echo "APP_FIREBASE_APP_ID=$APP_FIREBASE_APP_ID" >> .env.production
          echo "APP_FIREBASE_AUTH_DOMAIN=$APP_FIREBASE_AUTH_DOMAIN" >> .env.production
          echo "APP_FIREBASE_MEASUREMENT_ID=$APP_FIREBASE_MEASUREMENT_ID" >> .env.production
          echo "APP_FIREBASE_MESSAGING_SENDER_ID=$APP_FIREBASE_MESSAGING_SENDER_ID" >> .env.production
          echo "APP_FIREBASE_PROJECT_ID=$APP_FIREBASE_PROJECT_ID" >> .env.production
          echo "APP_FIREBASE_STORAGE_BUCKET=$APP_FIREBASE_STORAGE_BUCKET" >> .env.production
          echo "APP_GTM_ID=$APP_GTM_ID" >> .env.production
          echo "SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN" >> .env.production
          echo "SENTRY_ORG=$SENTRY_ORG" >> .env.production
          echo "SENTRY_PROJECT=$SENTRY_PROJECT" >> .env.production
          echo "SENTRY_URL=$SENTRY_URL" >> .env.production
          echo "SENTRY_PUBLISH_RELEASE=true" >> .env.production

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
